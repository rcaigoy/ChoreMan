
@{
    ViewBag.Title = "EditChoreList";
}

<h2>Chore:  @ViewBag.ChoreList.Name</h2>

<div id="SaveForm">
</div>
<div id="ChoreListForm">
    <label>Set Active</label>
    <input type="checkbox" @if (ViewBag.Chorelist.IsActive) { WriteLiteral("checked"); } />
    <br />

    <button id="Save">Save</button>
    <button class="Cancel">Cancel</button>
    <br />

    <br />

    <div id="ChoreUsersList">
        <h2>Users</h2>
        <br />

        <br />

        <table id="ChoreUsersTable">
            @foreach (var ChoreUser in ViewBag.ChoreList.ChoreUsers)
            {
                <tr>
                    <td>
                        <label>@ChoreUser.SortOrder</label>
                    </td>
                    <td>
                        <label>@ChoreUser.FirstName @ChoreUser.LastName</label>
                    </td>

                    <td>
                        <label>@ChoreUser.Phone</label>
                    </td>

                    <td>
                        @if (ChoreUser.IsVerified)
                        {
                            <label>Verified</label>
                        }
                        else
                        {
                            <label>Not Verified</label>
                        }
                    </td>

                    <td>
                        <button class="EditUser" name="@ChoreUser.Id">Edit User</button>
                    </td>
                </tr>
            }
        </table>
        <br />
        <button id="AddUser">Add User</button>
    </div>
    <br />

    <br />

    <div id="ChoresList">
        <h2>Chores</h2>
        <br />

        <table id="ChoresTable">
            @foreach (var Chore in ViewBag.ChoreList.Chores)
            {
                <tr>
                    <td>
                        <label>@Chore.SortOrder</label>
                    </td>
                    <td>
                        <label>@Chore.Name</label>
                    </td>

                    <td>
                        <button class="EditChore" name="@Chore.Id">Edit Chore</button>
                    </td>
                </tr>
            }
        </table>
        <br />
        <button id="AddChore">Add Chore</button>
    </div>
    <br />

    <br />

    <div id="RotationIntervalsList">
        <h2>Scheduled Rotations</h2>
        <br />

        <table id="RotationIntervalsTable">
            @foreach (var RotationInterval in ViewBag.ChoreList.RotationIntervals)
            {
                <tr>
                    <td>
                        <label>Start Date:  @RotationInterval.StartDate</label>
                    </td>

                    <td>
                        <label>Send every:  @RotationInterval.IntervalNumber</label>
                    </td>

                    <td>
                        <label>@RotationInterval.IntervalTypeName</label>
                    </td>

                    <td>
                        <button class="EditRotation" name="@RotationInterval.Id">Edit</button>
                    </td>
                </tr>
            }
        </table>

        <button id="AddRotation">Add Schedule Rotation</button>
    </div>
    <br />

</div>


<div class="Popup" id="UserPopup">
    <h2 class="PopupTitle" id="UserPopupTitle">Add User</h2>
    <br />

    <label>First Name</label>
    <input type="text" id="UserFirstName" />
    <br />

    <label>Last Name</label>
    <input type="text" id="UserLastName" />
    <br />

    <label>Phone</label>
    <input type="tel" id="UserPhone" />
    <br />

    <label>Email</label>
    <input type="email" id="UserEmail" />
    <br />

    <button id="SubmitUserButton">Submit</button>
    <button class="Cancel">Cancel</button>

    <br />
    <button id="RemoveUser">Remove User</button>
</div>

<div id="ChorePopup">
    <h2 class="PopupTitle" id="ChorePopupTitle" >Add Chore</h2>
    <br />

    <label>Name</label>
    <input type="text" id="ChoreName" />
    <br />

    <label>Description</label>
    <textarea id="ChoreDescription"></textarea>
    <br />

    <button id="SubmitChoreButton">Submit</button>
    <button class="Cancel">Cancel</button>
    <br />

    <button id="RemoveChore">Delete Chore</button>
</div>

<div id="RotationPopup">
    <h2 class="PopupTitle">Add Rotation</h2>
    <label>Start Date</label>
    <input type="text" id="RotationStartDate" />
    <br />

    <label>Every</label>
    <input type="number" id="RotationIntervalNumber" />
    <br />

    <label>IntervalType</label>
    <select id="RotationIntervalType">
        <option value="1">Days</option>
        <option value="2">Business Days</option>
        <option value="3">Months</option>
    </select>
    <br />

    <br />

    <button id="SubmitRotationButton">Add Rotation</button>
    <button class="Cancel">Cancel</button>
    <br />

    <button id="RemoveRotationButton">Delete Rotation</button>
</div>

@section scripts {

    <script src='https://cdnjs.cloudflare.com/ajax/libs/dragula/$VERSION/dragula.min.js'></script>

    <script>
        $(document).ready(function () {

            $('.Cancel').on('click', function () {
                window.location.reload();
            });//end $('.Cancel').on('click', function () {

            //Add or Edit User Popup button
            $('#AddUser, .EditUser').on('click', function () {
                SubmitUserButton.name = this.name;
                if (this.name) {
                    $('#RemoveUser').removeClass('hidden');
                    UserPopupTitle.innerHTML = 'Edit User';

                    //get chore user object
                    $.ajax({
                        url: '@Url.Action("GetChoreUser", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + SubmitUserButton.name,
                        type: 'GET',
                        success: function (data) {
                            UserFirstName.value = data.FirstName;
                            UserLastName.value = data.LastName;
                            UserPhone.value = data.Phone;
                            UserEmail.value = data.Email;
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }
                else {
                    $('#RemoveUser').addClass('hidden');
                    UserPopupTitle.innerHTML = 'Add User';

                    UserFirstName.value = '';
                    UserLastName.value = '';
                    UserPhone.value = '';
                    UserEmail.value = '';
                }
            });//end $('#AddUser').on('click', function () {


            //Add User Submit Button
            $('#SubmitUserButton').on('click', function () {
                let ChoreUserObject = {};

                    ChoreUserObject['ChoreListId'] = @ViewBag.ChoreList.Id;
                    ChoreUserObject['Phone'] = UserPhone.value;
                    ChoreUserObject['Email'] = UserEmail.value;
                    ChoreUserObject['FirstName'] = UserFirstName.value;
                    ChoreUserObject['LastName'] = UserLastName.value;

                if (this.name) {
                    let ChoreUserId = this.name;

                    $.ajax({
                        url: '@Url.Action("UpdateChoreUser", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + ChoreUserId
                            + '&ChoreUserValues=' + escape(JSON.stringify(ChoreUserObject))
                        ,
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                            alert('Success');
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                    
                }//end if (this.name){

                //if not this.name
                else {
                    $.ajax({
                        url: '@Url.Action("AddChoreUser", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&ChoreUserValues=' + escape(JSON.stringify(ChoreUserObject)),
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }
            });//end $('#SubmitUserButton').on('click', function () {


            //Delete Chore User
            $('#RemoveUser').on('click', function () {
                if (SubmitUserButton.name) {
                    let confirm = window.confirm('Are you sure you want to remove this user?');
                    if (confirm) {
                        $.ajax({
                            url: '@Url.Action("DeleteChoreUser", "API")'
                                + '?AuthToken=' + '@ViewBag.User.AuthToken'
                                + '&Id=' + SubmitUserButton.name
                            ,
                            type: 'POST',
                            success: function (data) {
                                window.location.reload();
                            },
                            error: function (data) {
                                console.log(data);
                                alert('Error');
                            }
                        });//end $.ajax({

                    }//end if (confirm){
                }
            });//end $('#RemoveUser').on('click', function () {


            //Add/Edit Chore Popup Button
            $('#AddChore, .EditChore').on('click', function () {
                SubmitChoreButton.name = this.name;

                if (this.name) {
                    //add in remove button
                    $('#RemoveChoreButton').removeClass('hidden');

                    //change title
                    ChorePopupTitle.innerHTML = 'Edit Chore';

                    $.ajax({
                        url: '@Url.Action("GetChore", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + SubmitChoreButton.name
                        ,
                        type: 'GET',
                        success: function (data) {
                            ChoreName.value = data.Name;
                            ChoreDescription.value = data.Description;
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }
                else {
                    //hide remove button
                    $('#RemoveChoreButton').addClass('hidden');

                    //change title
                    ChorePopupTitle.innerHTML = "Add Chore";

                    ChoreName.value = '';
                    ChoreDescription.value = '';
                }
            });//end $('#AddChore, .EditChore').on('click', function () {


            //Submit Chore Button
            $('#SubmitChoreButton').on('click', function () {
                let ChoreObject = {};
                ChoreObject['Name'] = ChoreName.value;
                ChoreObject['Description'] = ChoreDescription.value;
                ChoreObject['ChoreListId'] = @ViewBag.ChoreList.Id;

                if (this.name) {
                    let ChoreId = this.name;
                    $.ajax({
                        url: '@Url.Action("UpdateChore", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + ChoreId
                            + '&ChoreValues=' + escape(JSON.stringify(ChoreObject))
                        ,
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }
                else {
                    $.ajax({
                        url: '@Url.Action("AddChore", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&ChoreValues=' + escape(JSON.stringify(ChoreObject))
                        ,
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }

            });//end $('#SubmitChoreButton').on('click', function () {


            //Delete Chore Button
            $('#RemoveChore').on('click', function () {
                if (SubmitChoreButton.name) {
                    let confirm = windows.confirm('Are you sure you want to delete this chore?');
                    if (confirm) {
                        $.ajax({
                            url: '@Url.Action("DeleteChore", "API")'
                                + '?AuthToken=' + '@ViewBag.User.AuthToken'
                                + '&Id=' + SubmitChoreButton.name
                            ,
                            type: 'POST',
                            success: function (data) {
                                window.location.reload();
                            },
                            error: function (data) {
                                console.log(data);
                                alert('Error');
                            }
                        });//end $.ajax({
                    }
                }
            });//end $('#RemoveChore').on('click', function () {


            //Add/Edit Interval Popup Button
            $('#AddRotation, .EditRotation').on('click', function () {
                SubmitRotationButton.name = this.name;

                if (this.name) {
                    //get rotation interval information
                    $.ajax({
                        url: '@Url.Action("GetRotationInterval", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + SubmitRotationButton.name
                        ,
                        type: 'GET',
                        success: function (data) {
                            RotationStartDate.value = data.StartDate;
                            RotationIntervalNumber.value = data.IntervalNumber;
                            RotationIntervalType.value = data.IntervalTypeId;
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }

                    });//end $.ajax({
                }//end if (this.name){
                else {
                    RotationStartDate.value = '';
                    RotationIntervalNumber.value = '';
                    RotationIntervalType.value = '';
                }

            });//end $('#AddRotation, .EditRotation').on('click', function () {


            //Submit Rotation Interval
            $('#SubmitRotationButton').on('click', function () {
                let RotationObject = {}
                RotationObject['StartDate'] = RotationStartDate.value;
                RotationObject['IntervalTypeId'] = RotationIntervalType.value;
                RotationObject['IntervalNumber'] = RotationIntervalNumber.value;
                RotationObject['ChoreListId'] = @ViewBag.ChoreList.Id;

                if (this.name) {
                    let RotationId = this.name;

                    $.ajax({
                        url: '@Url.Action("UpdateRotationInterval", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&Id=' + RotationId
                            + '&RotationIntervalValues=' + escape(JSON.stringify(RotationObject))
                        ,
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({

                }//end if (this.name){
                else {
                     $.ajax({
                        url: '@Url.Action("AddRotationInterval", "API")'
                            + '?AuthToken=' + '@ViewBag.User.AuthToken'
                            + '&RotationIntervalValues=' + escape(JSON.stringify(RotationObject))
                        ,
                        type: 'POST',
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function (data) {
                            console.log(data);
                            alert('Error');
                        }
                    });//end $.ajax({
                }

            });//end $('#SubmitRotationButton').on('click', function () {


            //RemoveRotation Button clicked
            $('#RemoveRotationButton').on('click', function () {
                if (SubmitRotationButton.name) {
                    let confirm = window.confirm('Are you sure you want to delete this scheduled rotation?');
                    if (confirm) {
                        $.ajax({
                            url: '@Url.Action("DeleteRotationInterval", "API")'
                                + '?AuthToken=' + '@ViewBag.User.AuthToken'
                                + '&Id=' + SubmitRotationButton.name
                            ,
                            type: 'POST',
                            success: function (data) {
                                window.location.reload();
                            },
                            error: function (data) {
                                console.log(data);
                                alert('Error');
                            }
                        });//end $.ajax({
                    }//end if (confirm){
                }//end if (SubmitRotationButton.name){
            });//end $('#RemoveRotationButton').on('click', function () {

        });//end $(document).ready(function () {
    </script>
}
