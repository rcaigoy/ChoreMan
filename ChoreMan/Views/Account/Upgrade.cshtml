
@{
    ViewBag.Title = "Upgrade";
}

<h2>Upgrade Account</h2>

place square payment here that upgrades account type to chosen.

<div id="SquarePaymentForm">
    <label>Select Account Type:</label>
    <br />
    <select id="SelectAccountType">
        @foreach(var AccountType in ViewBag.AccountTypes)
        {
            if (ViewBag.AccountType.AccountTypeId == AccountType.AccountTypeId)
            {
                <option value="@AccountType.AccountTypeId" selected>@AccountType.AccountTypeName</option>
            }
            else
            {
                <option value="@AccountType.AccountTypeId">@AccountType.AccountTypeName</option>
            }
        }
    </select>

    <br /><br />

    <div>Amount: $<label id="Amount" value="@ViewBag.AccountType.AccountTypeId">@ViewBag.AccountType.BasePricePerMonth.ToString("#.##")</label></div>

</div>

<br /><br />


<div id="form-container">
    <div id="sq-ccbox">
        <!--
          Be sure to replace the action attribute of the form with the path of
          the Transaction API charge endpoint URL you want to POST the nonce to
          (for example, "/process-card")
        -->
        <form id="nonce-form" novalidate action="process-payment" method="post">
            <fieldset>
                <div id="sq-card-number"></div>
                <div class="third">
                    <div id="sq-expiration-date"></div>
                </div>
                <div class="third">
                    <div id="sq-cvv"></div>
                </div>
                <div class="third">
                    <div id="sq-postal-code"></div>
                </div>
            </fieldset>
            <button id="sq-creditcard" class="button-credit-card" onclick="onGetCardNonce(event)">
                Submit Payment
            </button>
            <!--
              After a nonce is generated it will fill in this hidden input field.
            -->
            <input type="hidden" id="card-nonce" name="nonce">
        </form>
    </div> <!-- end #sq-ccbox -->
</div> <!-- end #form-container -->

@section scripts{
<script>
    $(document).ready(function () {
        $('#SelectAccountType').on('change', function () {

            //get account type from api
            $.ajax({
                url: '@Url.Action("GetAccountType", "UsersAPI")?AccountTypeId=' + this.value,
                type: 'GET',
                success: function (data) {
                    Amount.innerText = data.BasePricePerMonth.toFixed(2);
                    Amount.setAttribute('value', data.AccountTypeId);
                },
                error: function (data) {
                    console.log(data);
                    alert('Error');
                }

            });//end $.ajax({

        });//end $('#SelectAccountType').on('change', function () {

    });//end $(document).ready(function () {
</script>


<script type="text/javascript">
    // Create and initialize a payment form object
    const paymentForm = new SqPaymentForm({
        // Initialize the payment form elements

        //TODO: Replace with your sandbox application ID
        applicationId: "@PrivateValues.SquareApplicationId",
        inputClass: 'sq-input',
        autoBuild: false,
        // Customize the CSS for SqPaymentForm iframe elements
        inputStyles: [{
            fontSize: '16px',
            lineHeight: '24px',
            padding: '16px',
            placeholderColor: '#a0a0a0',
            backgroundColor: 'transparent',
        }],
        // Initialize the credit card placeholders
        cardNumber: {
            elementId: 'sq-card-number',
            placeholder: 'Card Number'
        },
        cvv: {
            elementId: 'sq-cvv',
            placeholder: 'CVV'
        },
        expirationDate: {
            elementId: 'sq-expiration-date',
            placeholder: 'MM/YY'
        },
        postalCode: {
            elementId: 'sq-postal-code',
            placeholder: 'Postal'
        },
        // SqPaymentForm callback functions
        callbacks: {
            /*
            * callback function: cardNonceResponseReceived
            * Triggered when: SqPaymentForm completes a card nonce request
            */
            cardNonceResponseReceived: function (errors, nonce, cardData) {
                if (errors) {
                    // Log errors from nonce generation to the browser developer console.
                    console.error('Encountered errors:');
                    errors.forEach(function (error) {
                        console.error('  ' + error.message);
                    });
                    alert('Encountered errors, check browser developer console for more details');
                    return;
                }

                console.log(nonce);
                //alert(`The generated nonce is:\n${nonce}`);

                //alert('Account Type to purchase is' + Amount.attributes['value'].value);
                let AccountTypeId = Amount.attributes['value'].value;

                $.ajax({
                    url: '@Url.Action("submitaccountpayment", "usersapi")'
                        + '?AuthToken=' + '@ViewBag.User.AuthToken'
                        + '&UserId=' + '@ViewBag.User.Id'
                        + '&AccountTypeId=' + AccountTypeId
                        + '&Nonce=' + nonce,
                    type: 'POST',
                    success: function (data) {
                        alert('success!');
                        window.location.href = '@Url.Action("Index", "Account")';
                    },
                    error: function (data) {
                        console.log(data);
                        alert('Error');
                    }
                });//end $.ajax({

                //TODO: Replace alert with code in step 2.1
            }
        },

    });


    //TODO: paste code from step 1.1.5
     paymentForm.build();

    //TODO: paste code from step 1.1.4

    // onGetCardNonce is triggered when the "Pay $1.00" button is clicked
     function onGetCardNonce(event) {
       // Don't submit the form until SqPaymentForm returns with a nonce
       event.preventDefault();
       // Request a nonce from the SqPaymentForm object
       paymentForm.requestCardNonce();
     }
</script>

}